df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from emp order by job"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
df
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from emp order by job"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from emp order by job"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE)))
df
head(df)
ggplot(df, aes(x=EMPNO, y=SAL, color=job)) + geom_line()
library("gplots", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
ggplot(df, aes(x=EMPNO, y=SAL, color=job)) + geom_line()
source('~/DataVisualization/DrCannata/RWorkshop/03 Grammar of Graphics with R & ggplot2/Grammar Examples.R')
require(extrafont)
require(ggplot2)
options(java.parameters="-Xmx2g")
ggplot() +
coord_cartesian() +
#scale_x_continuous() +
scale_x_discrete() +
scale_y_continuous() +
scale_color_hue() +
facet_wrap(~cut) +
#facet_grid(clarity~cut, labeller=label_both) +
labs(title='Diamonds') +
labs(x="Cut", y="Price") +
theme_grey() +
theme(plot.background = element_rect(fill="green", colour=NA)) +
theme(plot.title=element_text(size=30, face="bold", vjust=1, family="Bauhaus93")) +
theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
theme(axis.text.x=element_text(angle=50, size=20, vjust=0.5)) +
theme(
axis.title.x=element_text(color="forestgreen", vjust=0.35),
axis.title.y=element_text(color="cadetblue", vjust=0.35)
) +
layer(data=diamonds,
mapping=aes(x=cut, y=price, color=color),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
#position=position_dodge()
) +
layer(data=diamonds,
mapping=aes(x=cut, y=price),
stat="boxplot",
stat_params=list(),
geom="boxplot",
geom_params=list(color="red", fill="red", alpha=0),
position=position_identity()
) + layer(
data=diamonds,
mapping=aes(x=cut, y=price),
stat="smooth", stat_params=list(),
geom="smooth", geom_params=list(),
position=position_identity()
) +
layer(
data=diamonds,
mapping=aes(x=color),
stat="bin",
stat_params=list(),
geom="bar",
geom_params=list(),
position=position_identity()
)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from titanic where sex is not null"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
require(extrafont)
ggplot() +
coord_cartesian() +
scale_x_continuous() +
scale_y_continuous() +
#facet_wrap(~SURVIVED) +
#facet_grid(.~SURVIVED, labeller=label_both) + # Same as facet_wrap but with a label.
facet_grid(PCLASS~SURVIVED, labeller=label_both) +
labs(title='Titanic') +
labs(x="Age", y=paste("Fare")) +
layer(data=df,
mapping=aes(x=as.numeric(as.character(AGE)), y=as.numeric(as.character(FARE)), color=SEX),
stat="identity",
stat_params=list(),
geom="point",
geom_params=list(),
#position=position_identity()
position=position_jitter(width=0.3, height=0)
)
(-18*0.04)+(-14*0.06)+(2*0.05)+(11*0.01)+(20*0.84)
(10*(1/4))+(50(1/2))+(100*(1/8))
1/4
(10*.25)+(50*.5)+(100/8)
choose(5,2)
1/7
(1/7)*300
(6/7)*150
42.85714+128.5714
(1/50)*92
(49/50)*-8
-7.84+1.84
(49/50)*6
(1/50)*-92
5.88-1.84
(1/50)*94
(10*10)(1/17)
(10*10)*(1/17)
(50*50)*(2/17)
100*100*(27/34)
5.882353+294.1176+7941.176
(10*(1/17))+(50*(2/17))+100*(27/34)
85.88235*85.88235
8241.176-7375.778
0.3*0.9
require(tidyr)
require(dplyr)
require(ggplot2)
tbl_df(diamonds)
View(diamonds)
# select
select(diamonds, cut, clarity) %>% tbl_df # Equivalent SQL: select cut, clarity from diamonds;
data.frame(x=c(1,1,1,2,2), y=c(5:1), z=(1:5)) %>% arrange(desc(x)) %>% tbl_df
diamonds %>% select(cut, clarity, x, y, z) %>% filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% mutate(sum = x+y+z) %>% tbl_df
pmin(c(1:5), (5:1)) # Pairwise min
diamonds %>% mutate(minxy = pmin(x,y)) %>% tbl_df
pmax(c(1:5), (5:1)) # Pairwise max
c(1:5) %>% cummean()
c(1:5) %>% lead() - c(1:5)
diamonds %>% mutate(lead_z = lead(z)-z) %>% tbl_df
diamonds %>% mutate(lag_z = lag(z)-z) %>% tbl_df
View(diamonds)
pmin(c(1:5), (5:1)) # Pairwise min
diamonds %>% mutate(minxy = pmin(x,y)) %>% tbl_df
pmax(c(1:5), (5:1)) # Pairwise max
c(1,1,2,0,4,3,5) %>% cummin()
diamonds %>% mutate(cummin_x = cummin(x)) %>% tbl_df
c(1,1,2,5,4,3,5) %>% cummax()
c(1,1,2,3,4,3,5) %>% cumsum()
diamonds %>% mutate(lead_z = lead(z)-z) %>% View(diamonds)
diamonds %>% mutate(lead_z = lead(z)-z) %>% View
diamonds %>% mutate(lag_z = lag(z)-z) %>% View
diamonds %>% mutate(lag_z = z-lag(z)) %>% View
diamonds %>% mutate(lead_z = lead(z)-z) %>% View
diamonds %>% mutate(lag_z = lag(z)-z) %>% View
c(1:10) %>% ntile(4) # bucket edges are rounded
diamonds %>% mutate(ntile_z = ntile(z,100)) %>% arrange(desc(ntile_z)) %>% View
diamonds %>% mutate(ntile_z = ntile(z,100)) %>% group_by(ntile_z) %>% summarise(n=n()) %>% tbl_df
diamonds %>% mutate(ntile_z = ntile(z,100)) %>% group_by(ntile_z) %>% summarise(n=n()) %>% View
diamonds %>% mutate(price_percent = cume_dist(price)) %>% filter(price_percent <= .20 | price_percent >= .80) %>% ggplot(aes(x = price, y = carat)) + geom_point(aes(color=cut))
View(diamonds)
setwd("/Users/patriciaobrien/DataVisualization/DV_RProject2/01 Data")
file_path <- "Employee_Salaries_-_2014.csv"
df <- read.csv(file_path, stringsAsFactors = FALSE)
# Replace "." (i.e., period) with "_" in the column names.
names(df) <- gsub("\\.+", "_", names(df))
str(df) # Uncomment this and  run just the lines to here to get column types to use for getting the list of measures.
measures <- c("Current_Annual_Salary", "X2014_Gross_Pay_Received", "X2014_Overtime_Pay")
for(n in names(df)) {
df[n] <- data.frame(lapply(df[n], gsub, pattern="[^ -~]",replacement= ""))
}
dimensions <- setdiff(names(df), measures)
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
# Get rid of " and ' in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="[\"']",replacement= ""))
# Change & to and in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern="&",replacement= " and "))
# Change : to ; in dimensions.
df[d] <- data.frame(lapply(df[d], gsub, pattern=":",replacement= ";"))
}
}
library(lubridate)
# Fix date columns, this needs to be done by hand because | needs to be correct.
#                                                        \_/
df$Order_Date <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Order_Date), tz="UTC")))
df$Ship_Date  <- gsub(" [0-9]+:.*", "", gsub(" UTC", "", mdy(as.character(df$Ship_Date),  tz="UTC")))
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
df[m] <- data.frame(lapply(df[m], gsub, pattern="[^--.0-9]",replacement= ""))
}
}
write.csv(df, paste(gsub(".csv", "", file_path), ".reformatted.csv", sep=""), row.names=FALSE, na = "")
tableName <- gsub(" +", "_", gsub("[^A-z, 0-9, ]", "", gsub(".csv", "", file_path)))
sql <- paste("CREATE TABLE", tableName, "(\n-- Change table_name to the table name you want.\n")
if( length(measures) > 1 || ! is.na(dimensions)) {
for(d in dimensions) {
sql <- paste(sql, paste(d, "varchar2(4000),\n"))
}
}
source('~/DataVisualization/DV_RProject2/02 Data Wrangling/ETL.R')
if( length(measures) > 1 || ! is.na(measures)) {
for(m in measures) {
if(m != tail(measures, n=1)) sql <- paste(sql, paste(m, "number(38,4),\n"))
else sql <- paste(sql, paste(m, "number(38,4)\n"))
}
}
sql <- paste(sql, ");")
cat(sql)
require("jsonlite")
require("RCurl")
# Change the USER and PASS below to be your UTEid
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES_2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from titanic where sex is not null"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
summary(df)
head(df)
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES_2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
View(df)
View(df)
View(df)
df <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES_2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
df
tf <- data.frame(fromJSON(getURL(URLencode('129.152.144.84:5001/rest/native/?query="select * from EMPLOYEE_SALARIES_2014"'),httpheader=c(DB='jdbc:oracle:thin:@129.152.144.84:1521/PDBF15DV.usuniversi01134.oraclecloud.internal', USER='cs329e_pjo293', PASS='orcl_pjo293', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
tf
View(df)
View(df)
View(df)
